/*******************************************************************************
 * Copyright 2020 Samsung Electronics All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *******************************************************************************/

// Code generated by MockGen. DO NOT EDIT.
// Source: types.go

// Package mock_restinterface is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	restinterface "github.com/lf-edge/edge-home-orchestration-go/internal/restinterface"
	cipher "github.com/lf-edge/edge-home-orchestration-go/internal/restinterface/cipher"
)

// MockIRestRoutes is a mock of IRestRoutes interface
type MockIRestRoutes struct {
	ctrl     *gomock.Controller
	recorder *MockIRestRoutesMockRecorder
}

// MockIRestRoutesMockRecorder is the mock recorder for MockIRestRoutes
type MockIRestRoutesMockRecorder struct {
	mock *MockIRestRoutes
}

// NewMockIRestRoutes creates a new mock instance
func NewMockIRestRoutes(ctrl *gomock.Controller) *MockIRestRoutes {
	mock := &MockIRestRoutes{ctrl: ctrl}
	mock.recorder = &MockIRestRoutesMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIRestRoutes) EXPECT() *MockIRestRoutesMockRecorder {
	return m.recorder
}

// SetCipher mocks base method
func (m *MockIRestRoutes) SetCipher(cipher cipher.IEdgeCipherer) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetCipher", cipher)
}

// SetCipher indicates an expected call of SetCipher
func (mr *MockIRestRoutesMockRecorder) SetCipher(cipher interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetCipher", reflect.TypeOf((*MockIRestRoutes)(nil).SetCipher), cipher)
}

// GetRoutes mocks base method
func (m *MockIRestRoutes) GetRoutes() restinterface.Routes {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRoutes")
	ret0, _ := ret[0].(restinterface.Routes)
	return ret0
}

// GetRoutes indicates an expected call of GetRoutes
func (mr *MockIRestRoutesMockRecorder) GetRoutes() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRoutes", reflect.TypeOf((*MockIRestRoutes)(nil).GetRoutes))
}
