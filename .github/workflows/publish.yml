name: Creating release & publishing container
on:
  push:
    tags:
      - 'v*'

permissions:
  contents: read

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: Setup Golang
        uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34
        with:
          go-version: '1.23'

      - name: Set up QEMU
        uses: docker/setup-qemu-action@4574d27a4764455b42196d70a065bc6853246a25

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@369eb591f429131d6889c46b94e711f089e6ca96
        with:
          images: lfedge/edge-home-orchestration-go
          tags: |
            type=semver,pattern={{version}}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@6524bf65af31da8d45b59e8c27de4bd072b392f5

      - name: Log in to Docker Hub
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Copy Dockerfile
        run: |
          make distclean
          cp configs/defdockerfiles/ubuntu_multistage Dockerfile

      - name: Build and push
        uses: docker/build-push-action@ca877d9245402d1537745e0e356eab47c3520991
        with:
          context: .
          build-args: TARGETVERSION=v${{ steps.meta.outputs.version }}
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  # Create Release
  create-release:
    permissions:
      contents: write  # for marvinpinto/action-automatic-releases to generate pre-release
    name: Create Release
    runs-on: ubuntu-latest

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@cb605e52c26070c328afc4562f0b4ada7618a84e
        with:
          egress-policy: audit

      - uses: marvinpinto/action-automatic-releases@d68defdd11f9dcc7f52f35c1b7c236ee7513bcc1
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          title: "Edge-Orchestration ${{ github.ref_name }}"

  # Generate Hashes
  generate_hashes:
    needs: [create-release]
    runs-on: ubuntu-latest
    name: Generate Hashes
    outputs:
      hashes: ${{ steps.hash.outputs.hashes }}
    steps:
      - name: Download Source Code Assets
        run: |
          VERSION=${{ github.ref_name }}
          wget https://github.com/${{ github.repository }}/archive/refs/tags/${VERSION}.tar.gz
          wget https://github.com/${{ github.repository }}/archive/refs/tags/${VERSION}.zip
          mv ${VERSION}.tar.gz edge-home-orchestration-go-${VERSION:1}.tar.gz
          mv ${VERSION}.zip edge-home-orchestration-go-${VERSION:1}.zip

      - name: Generate hashes
        id: hash
        run: |
          VERSION=${{ github.ref_name }}
          echo "hashes=$(sha256sum edge-home-orchestration-go-${VERSION:1}.tar.gz edge-home-orchestration-go-${VERSION:1}.zip | base64 -w0)" >> "$GITHUB_OUTPUT"

  provenance:
    needs: [generate_hashes, create-release]
    name: Generate Provenance
    permissions:
      actions: read # To read the workflow path.
      id-token: write # To sign the provenance.
      contents: write # To add assets to a release.

    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v2.0.0
    with:
      base64-subjects: "${{ needs.generate_hashes.outputs.hashes }}"
      upload-assets: true # Optional: Upload to a new release
