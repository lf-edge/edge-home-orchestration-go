openapi: 3.0.0
info:
  title: EdgeX Foundry - Device Service API
  description: This is the definition of the API for Device services in the EdgeX Foundry IOT microservice platform. Device Services are responsible for obtaining Readings from target devices, and for writing values (settings) to them.
  version: 2.x

servers:
  - url: http://0:49999/api/v2
    description: URL for local development and testing

components:
  schemas:
    AutoEvent:
      description: "Identifies a resource which will be read automatically by the device service."
      type: object
      properties:
        frequency:
          description: "Specifies a time interval between reading requests. This may be in a combination of hours, minutes, seconds and milliseconds (h/m/s/ms)"
          type: string
          example: "1m30s"
        onChange:
          description: "If true, new Events will only be generated if successive readings differ in value."
          type: boolean
        resource:
          description: "Indicates the resource to be read"
          type: string
      required:
        - resource
        - frequency
    NewBaseReading:
      description: "A base reading type containing common properties from which more specific reading types inherit. This definition should not be implemented but is used elsewhere to indicate support for a mixed list of simple/binary readings in a single event."
      type: object
      properties:
        device:
          description: "The name of the device from which the reading originated"
          type: string
        origin:
          description: "A Unix timestamp indicating when the reading was originated at the source device (can support nanoseconds)"
          type: integer
    BaseRequest:
      description: "Defines basic properties which all use-case specific request DTO instances should support."
      type: object
      properties:
        requestId:
          description: "Uniquely identifies this request. For implementation, recommend this value be generated by the type's constructor."
          type: string
          format: uuid
          example: "e6e8a2f4-eb14-4649-9e2b-175247911369"
    NewBinaryReading:
      description: "An event reading for a binary data type"
      allOf:
        - $ref: '#/components/schemas/NewBaseReading'
        - type: object
          properties:
            binaryValue:
              description: "The value of the reading will be found in this property as a byte array"
              type: string
              format: binary
            mediaType:
              description: "E.g. MIME Type, indicates what the content type of the binaryValue property is."
              type: string
    BaseResponse:
      description: "Defines basic properties which all use-case specific response DTO instances should support"
      type: object
      properties:
        apiVersion:
          description: "A version number shows the API version in DTOs."
          type: string
          example: "v2"
        requestId:
          description: "Uniquely identifies the request that resulted in this response."
          type: string
          format: uuid
          example: "e6e8a2f4-eb14-4649-9e2b-175247911369"
        statusCode:
          description: "A numeric code signifying the operational status of the response."
          type: integer
        message:
          description: "A field that can contain a free-form message, such as an error message."
          type: string
    Command:
      description: "Defines an operation which will be made available by the core-command service"
      type: object
      properties:
        created:
          type: integer
          description: "A Unix timestamp indicating when the object was initially persisted to a database"
        modified:
          type: integer
          description: "A Unix timestamp indicating when the object was last modified"
        id:
          type: string
          format: uuid
          description: "The unique identifier for the command"
        name:
          type: string
          description: "The command name"
        get:
          $ref: '#/components/schemas/CommandAction'
        put:
          $ref: '#/components/schemas/CommandAction'
    CommandAction:
      description: "Defines a read or write command as issued to a device via the core-command service"
      type: object
      properties:
        path:
          type: string
          description: "The path part of the URL used to access the command"
    Device:
      description: "A device is an IoT object represented in EdgeX."
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: "The unique identifier of the device"
        created:
          type: integer
          description: "A Unix timestamp indicating when the object was initially persisted to a database"
        modified:
          type: integer
          description: "A Unix timestamp indicating when the object was last modified"
        name:
          type: string
          description: "The name of the device"
        description:
          type: string
          description: "A free-format descriptive field for additional device information"
        adminState:
          type: string
          enum: [locked, unlocked]
          description: "Administrative state of the device, allowing it to be locked for policy reasons"
        operatingState:
          type: string
          enum: [enabled, disabled]
          description: "Operating state of the device, indicating whether it is currently responsive"
        lastConnected:
          type: integer
          description: "Time (milliseconds) that the device last provided any feedback or responded to any request"
        lastReported:
          type: integer
          description: "Time (milliseconds) that the device reported data to the core microservice"
        labels:
          type: array
          items:
            type: string
          description: "Other labels applied to the device to help with searching"
        location:
          type: object
          description: "Device service specific location information"
        serviceId:
          type: string
          description: "Associated device service referenced by id"
        serviceName:
          type: string
          description: "Associated device service referenced by name"
        profileId:
          type: string
          description: "Associated device profile referenced by id"
        profileName:
          type: string
          description: "Associated device profile referenced by name"
        autoEvents:
          type: array
          items:
            $ref: '#/components/schemas/AutoEvent'
          description: "Events which the service should generate automatically from this device."
        protocols:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ProtocolProperties'
    DeviceProfile:
      description: "A profile defining a class of device to be onboarded, including its capabilities and data format."
      type: object
      properties:
        created:
          type: integer
          description: "A Unix timestamp indicating when the object was initially persisted to a database"
        modified:
          type: integer
          description: "A Unix timestamp indicating when the object was last modified"
        description:
          type: string
          description: "A free-format descriptive field for additional device profile information"
        id:
          type: string
          format: uuid
          description: "The unique identifier for the device profile"
        name:
          type: string
          description: "The device profile name"
        manufacturer:
          type: string
          description: "The manufacturer of the device being described"
        model:
          type: string
          description: "The model name of the device being described"
        labels:
          type: array
          items:
            type: string
          description: "Other labels applied to the device profile to help with searching"
        deviceResources:
          type: array
          items:
            $ref: '#/components/schemas/DeviceResource'
          description: "Defines individual values that can be queried or set"
        deviceCommands:
          type: array
          items:
            $ref: '#/components/schemas/ProfileResource'
          description: "Defines aggregations of deviceResources."
        coreCommands:
          type: array
          items:
            $ref: '#/components/schemas/Command'
          description: "Defines commands that are accessible via the core-command service,"
    DeviceResource:
      description: "DeviceResource represents a value on a device that can be read or written."
      type: object
      properties:
        name:
          type: string
          description: "The name of the device resource"
        description:
          type: string
          description: "A longer description of the device resource"
        properties:
          $ref: '#/components/schemas/PropertyValue'
        attributes:
          type: object
          additionalProperties:
            type: string
          description: "The attributes define how the value is addressed on the device"
    ErrorResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
      description: "A response type for returning a generic error to the caller."
      type: object
    ConfigResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
      description: "Provides a response containing the configuration for the targeted service."
      type: object
      properties:
        config:
          description: "An object containing the service''s configuration. Please refer to Core Data''s configuration documentation for more details at [EdgeX Foundry Documentation](https://docs.edgexfoundry.org)."
          type: object
    MetricsResponse:
      allOf:
      - $ref: '#/components/schemas/BaseResponse'
      description: "A response from the /metrics endpoint providing memory and cpu utilization stats."
      type: object
      properties:
        metrics:
          type: object
          properties:
            memAlloc:
              description: "Alloc is bytes of allocated heap objects which is a uint64 type integer."
              type: integer
            memFrees:
              description: "Frees is the cumulative count of heap objects freed which is a uint64 type integer."
              type: integer
            memLiveObjects:
              description: "The uint64 type integer of live objects is Mallocs - Frees."
              type: integer
            memMallocs:
              description: "The cumulative count of heap objects allocated which is a uint64 type integer."
              type: integer
            memSys:
              description: "The total bytes of memory obtained from the OS which is a uint64 type integer."
              type: integer
            memTotalAlloc:
              description: "Cumulative bytes allocated for heap objects which is a uint64 type integer."
              type: integer
            cpuBusyAvg:
              description: "A uint8 type integer indicates the average level of CPU utilization"
              type: number
    NewDeviceRequest:
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
      description: "Notification that a new device associated with this device service has been created."
      type: object
      properties:
        device:
          $ref: '#/components/schemas/Device'
      required:
        - device
    NewProfileRequest:
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
      description: "Notification that a new device profile has been created."
      type: object
      properties:
        profile:
          $ref: '#/components/schemas/DeviceProfile'
      required:
        - profile
    NewProvisionWatcherRequest:
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
      description: "Notification that a new provision watcher associated with this device service has been created."
      type: object
      properties:
        watcher:
          $ref: '#/components/schemas/ProvisionWatcher'
      required:
        - watcher
    NewEventResponse:
      description: "A discrete event containing one or more readings"
      properties:
        apiVersion:
          description: "A version number shows the API version in DTOs."
          type: string
          example: "v2"
        device:
          description: "The name of the device from which the event originated"
          type: string
        origin:
          description: "A Unix timestamp indicating when the event was originated at the source device (can support nanoseconds)"
          type: integer
        readings:
          description: "One or more readings captured at the time of the event"
          type: array
          items:
            $ref: '#/components/schemas/NewBaseReading'
    PingResponse:
      description: "A response from the /ping endpoint indicating that the service is functioning."
      allOf:
      - $ref: '#/components/schemas/BaseResponse'
      type: object
      properties:
        timestamp:
          description: "Outputs the current server timestamp in RFC1123 format"
          example: "Mon, 02 Jan 2006 15:04:05 MST"
          type: string
    ProfileResource:
      description: "Defines read/write capabilities native to the device"
      type: object
      properties:
        name:
          type: string
          description: "The name of the profile resource"
        get:
          type: array
          items:
            $ref: '#/components/schemas/ResourceOperation'
        set:
          type: array
          items:
            $ref: '#/components/schemas/ResourceOperation'
    PropertyValue:
      description: "Defines constraints with regard to the range of acceptable values assigned to an event reading and defined as a property within a device profile."
      type: object
      properties:
        type:
          type: string
          description: "The type of the data which may be read from this propertty"
        readWrite:
          type: string
          enum: [r, w, rw]
          description: "Whether this property is read-only, write-only, or both readable and writable"
        units:
          type: string
          description: "The units of measurement for the value expressed in this property"
        minimum:
          type: string
          description: "For numeric types, defines a minimum value that is permitted to be set"
        maximum:
          type: string
          description: "For numeric types, defines a maximum value that is permitted to be set"
        defaultValue:
          type: string
          description: "Defines a default value used if one is not provided in a set request"
        mask:
          type: string
          description: "Constant with which a value of integral type is bitwise-ANDed"
        shift:
          type: string
          description: "Constant with which a value of integral type is bit-shifted"
        scale:
          type: string
          description: "Constant by which a value of numeric type is scaled"
        offset:
          type: string
          description: "Constant by which a value of numeric type is increased"
        base:
          type: string
          description: "Constant by which a value of numeric type is exponentiated"
        assertion:
          type: string
          description: "Value to which a reading is compared to assert correct operation of the device"
        floatEncoding:
          type: string
          enum: [base64le, eNotation]
          description: "Format for floating point values. base64le indicates a base64 encoding of the float's little-endian binary representation"
        mediaType:
          type: string
          description: "The type of data contained in a binary value"
    ProtocolProperties:
      description: "The properties required to address a device via a particular protocol."
      example: {"Host":"floor4.hq.acme.com","Port":"8080"}
      type: object
      additionalProperties:
        type: string
    ProvisionWatcher:
      description: "A Provision Watcher assigns a subset of discoverable devices to a specified device service, and specifies the device profile which should be used with them, and their initial adminState. The subset is defined by the Identifiers and BlockingIdentifiers, which are matched against a discovered device's protocol properties - the subset contains only devices which match all of the Identifiers and none of the BlockingIdentifiers."
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: "The unique identifier for the provision watcher"
        name:
          type: string
          description: "The name of the provision watcher"
        created:
          type: integer
          description: "A Unix timestamp indicating when the object was initially persisted to a database"
        modified:
          type: integer
          description: "A Unix timestamp indicating when the object was last modified"
        identifiers:
          type: object
          additionalProperties:
            type: string
          description: "Properties of a new device which must match in order for this provision watcher to match the new device"
        blockingidentifiers:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          description: "Properties of a new device which must not match in order for this provision watcher to match the new device"
        service:
          type: string
          description: "The device service to which to associate devices which match this watcher"
        profile:
          type: string
          description: "The device profile to which to associate devices which match this watcher"
        adminState:
          type: string
          description: "The initial administrative state to apply to devices which match this watcher"
    ResourceOperation:
      description: "Defines an operation of which a device is capable."
      type: object
      properties:
        index:
          type: string
          description: "Defines the ordering of ResourceOperations within a DeviceCommand"
        operation:
          type: string
          enum: [get, set]
          description: "Whether the operation is a get/read or set/write"
        deviceResource:
          type: string
          description: "Name of a deviceResource to access. Only one of deviceResource and deviceCommand should be specified."
        parameter:
          type: string
          description: "Default value to be taken for set operations."
        deviceCommand:
          type: string
          description: "Name of a deviceCommand to access. Only one of deviceResource and deviceCommand should be specified."
        mappings:
          type: object
          additionalProperties:
            type: string
          description: "1:1 mappings for substituting values of string type"
    NewSimpleReading:
      description: "An event reading for a simple data type"
      allOf:
        - $ref: '#/components/schemas/NewBaseReading'
        - type: object
          properties:
            floatEncoding:
              description: "Indicates how a float value is encoded, if the value property contains a float."
              type: string
            valueType:
              description: "Indicates the datatype of the value property"
              type: string
            value:
              description: "A string representation of the reading's value"
              type: string
    SettingRequest:
      description: "Defines new values to be written to device resources, as part of an actuation (put) command to a device"
      additionalProperties:
        type: string
      title: Setting
      type: object
      example: {"AHU-TargetTemperature": "28.5", "AHU-TargetBand": "4.0"}
    UpdateDeviceRequest:
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
      description: "Notification that an existing device associated with this device service has been updated."
      type: object
      properties:
        device:
          $ref: '#/components/schemas/Device'
      required:
        - device
    UpdateProfileRequest:
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
      description: "Notification that an existing device profile has been updated."
      type: object
      properties:
        profile:
          $ref: '#/components/schemas/DeviceProfile'
      required:
        - profile
    UpdateProvisionWatcherRequest:
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
      description: "Notification that an existing provision watcher associated with this device service has been updated."
      type: object
      properties:
        watcher:
          $ref: '#/components/schemas/ProvisionWatcher'
      required:
        - watcher
    VersionResponse:
      description: "A response returned from the /version endpoint whose purpose is to report out the latest version supported by the service."
      allOf:
      - $ref: '#/components/schemas/BaseResponse'
      type: object
      properties:
        version:
          description: "The latest version supported by the service."
          type: string
        sdk_version:
          description: "The version of the SDK with which the service was built."
          type: string

  parameters:
    correlatedRequestHeader:
      in: header
      name: X-Correlation-ID
      description: "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request."
      schema:
        type: string
        format: uuid
      required: true
      example: "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"

  headers:
    correlatedResponseHeader:
      description: "A response header that returns the unique correlation ID used to initiate the request."
      schema:
        type: string
        format: uuid
      required: true
      example: "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"


paths:
  /callback/device:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
    post:
      description: "This call is used by core-metadata to inform the device service of the creation of a new Device"
      responses:
        '204':
          description: Indicating success of the operation and no content returned.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
        '400':
          description: Invalid callback request.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewDeviceRequest'
        required: true
    put:
      description: "This call is used by core-metadata to inform the device service that a Device's characteristics have been updated"
      responses:
        '204':
          description: Indicating success of the operation and no content returned.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
        '400':
          description: Invalid callback request.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: The device doesn't exist.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDeviceRequest'
        required: true

  /callback/device/id/{id}:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: "An ID of datatype string, by default a GUID."
    delete:
      description: "This call is used by core-metadata to inform the device service that a Device has been deleted"
      responses:
        '204':
          description: Indicating success of the operation and no content returned.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
        '404':
          description: No device exists for the ID provided.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /callback/profile:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
    post:
      description: "This call is used by core-metadata to inform the device service of the creation of a new Device Profile"
      responses:
        '204':
          description: Indicating success of the operation and no content returned.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
        '400':
          description: Invalid callback request.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewProfileRequest'
        required: true
    put:
      description: "This call is used by core-metadata to inform the device service that a Device Profile has been updated"
      responses:
        '204':
          description: Indicating success of the operation and no content returned.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
        '400':
          description: Invalid callback request.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: The device profile doesn't exist.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProfileRequest'
        required: true

  /callback/profile/id/{id}:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: "An ID of datatype string, by default a GUID."
    delete:
      description: "This call is used by core-metadata to inform the device service that a Device Profile has been deleted"
      responses:
        '204':
          description: Indicating success of the operation and no content returned.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
        '404':
          description: No device profile exists for the ID provided.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /callback/watcher:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
    post:
      description: "This call is used by core-metadata to inform the device service of the creation of a new Provision Watcher"
      responses:
        '204':
          description: Indicating success of the operation and no content returned.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
        '400':
          description: Invalid callback request.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewProvisionWatcherRequest'
        required: true
    put:
      description: "This call is used by core-metadata to inform the device service that a Provision Watcher's characteristics have been updated"
      responses:
        '204':
          description: Indicating success of the operation and no content returned.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
        '400':
          description: Invalid callback request.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: The provision watcher doesn't exist.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProvisionWatcherRequest'
        required: true

  /callback/watcher/id/{id}:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: "An ID of datatype string, by default a GUID."
    delete:
      description: "This call is used by core-metadata to inform the device service that a Provision Watcher has been deleted"
      responses:
        '204':
          description: Indicating success of the operation and no content returned.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
        '404':
          description: No provision watcher exists for the ID provided.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /device/name/{name}/{command}:
    get:
      description: Request the device/sensor by its name to return the current (or in some cases new) event/reading values for the command or device resource specified. The device service may have cached the latest event/reading for the sensor(s) or it may immediate request new event/reading values depending on the implementation and the device(s)/sensor(s) capability.
      parameters:
        - $ref: '#/components/parameters/correlatedRequestHeader'
        - in: path
          name: name
          required: true
          schema:
            type: string
          example: sensor
        - in: path
          name: command
          required: true
          schema:
            type: string
          example: allValues
        - in: query
          name: ds-postevent
          schema:
            type: string
            enum:
              - yes
              - no
            default: no
          example: yes
        - in: query
          name: ds-returnevent
          schema:
            type: string
            enum:
              - yes
              - no
            default: yes
          example: no
      responses:
        '200':
          description: String as returned by the device/sensor through the device service.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/NewEventResponse'
        '404':
          description: If no device exists by the name provided or the command is unknown.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '405':
          description: If the requested command exists but not for GET, or the resource is marked as write-only.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '423':
          description: If the device or service is locked (admin state) or disabled (operating state).
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: The device driver is unable to process the request, or too many values were returned.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      description: Request the actuator by its name to trigger a action or set a current value for the command or device resource specified.
      parameters:
        - $ref: '#/components/parameters/correlatedRequestHeader'
        - in: path
          name: name
          required: true
          schema:
            type: string
          example: sensor
        - in: path
          name: command
          required: true
          schema:
            type: string
          example: allValues
      responses:
        '200':
          description: The PUT command was successful.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
        '404':
          description: If no device exists for the name provided or the command is unknown.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '405':
          description: If the requested command exists but not for PUT, or the resource is marked as read-only.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '423':
          description: If the device or service is locked (admin state) or disabled (operating state).
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: The device driver is unable to process the request.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SettingRequest'
        required: true

  /device/{id}/{command}:
    get:
      description: Request the device/sensor by its id to return the current (or in some cases new) event/reading values for the command or device resource specified. The device service may have cached the latest event/reading for the sensor(s) or it may immediate request new event/reading values depending on the implementation and the device(s)/sensor(s) capability.
      parameters:
        - $ref: '#/components/parameters/correlatedRequestHeader'
        - in: path
          name: id
          required: true
          schema:
            type: string
          example: b4081782-a611-4180-848a-cf8235e6351d
        - in: path
          name: command
          required: true
          schema:
            type: string
          example: allValues
        - in: query
          name: ds-postevent
          schema:
            type: string
            enum:
              - yes
              - no
            default: no
          example: yes
        - in: query
          name: ds-returnevent
          schema:
            type: string
            enum:
              - yes
              - no
            default: yes
          example: no
      responses:
        '200':
          description: String as returned by the device/sensor through the device service.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/NewEventResponse'
        '404':
          description: If no device exists by the id provided or the command is unknown.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '405':
          description: If the requested command exists but not for GET, or the resource is marked as write-only.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '423':
          description: If the device or service is locked (admin state) or disabled (operating state).
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: The device driver is unable to process the request, or too many values were returned.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      description: Request the actuator by its id to trigger a action or set a current value for the command or device resource specified.
      parameters:
        - $ref: '#/components/parameters/correlatedRequestHeader'
        - in: path
          name: id
          required: true
          schema:
            type: string
          example: b4081782-a611-4180-848a-cf8235e6351d
        - in: path
          name: command
          required: true
          schema:
            type: string
          example: allValues
      responses:
        '200':
          description: The PUT command was successful.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
        '404':
          description: If no device exists for the ID provided or the command is unknown.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '405':
          description: If the requested command exists but not for PUT, or the resource is marked as read-only.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '423':
          description: If the device or service is locked (admin state) or disabled (operating state).
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: The device driver is unable to process the request.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SettingRequest'
        required: true

  /discovery:
    post:
      description: Run the discovery request for a Device Service. No request body is required.
      responses:
        '202':
          description: The service is running the discovery request.
        '423':
          description: The service is disabled or administratively locked.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: An unexpected error occurred on the server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '501':
          description: The device driver does not implement discovery.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: Discovery is disabled by configuration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /config:
    get:
      summary: "Returns the current configuration of the service."
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigResponse'
        '500':
          description: Interval Server Error
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /metrics:
    get:
      summary: "An endpoint that can be used to obtain CPU/Memory usage stats for a given service."
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsResponse'
        '500':
          description: Interval Server Error
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /ping:
    get:
      summary: "A simple 'ping' endpoint that can be used as a service healthcheck"
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PingResponse'
        '500':
          description: Interval Server Error
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /version:
    get:
      summary: "A simple 'version' endpoint that will return the current version of the service"
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionResponse'
        '500':
          description: Interval Server Error
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
